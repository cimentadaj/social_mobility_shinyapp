{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(tidyverse)\nlibrary(GGally)\nlibrary(gridExtra)\nlibrary(artyfarty)\n\nall_data <- read_csv(\"./dataset.csv\", col_names = T)\n\nserver <- # Define server logic required to draw a histogram\n    shinyServer(function(input, output, session) {\n        \n        filtered <- reactive({\n            if (is.null(input$country)) {\n                return(NULL)\n            }\n            \n            all_data1 <- \n                all_data %>%\n                filter(country == input$country)\n            \n            all_data1\n        })\n        \n        ineq_graph <- reactive({\n            \n            if (is.null(filtered())) {\n                return(NULL)\n            }\n            \n            dist_pred <-\n                filtered() %>%\n                ggplot(aes(x = pred, fill = isced)) + \n                geom_density(alpha = .5) +\n                geom_rug(data = filter(filtered(), is.na(cogn_label_fac)), aes(x = pred), color = \"black\", inherit.aes = FALSE) +\n                scale_x_continuous(name = NULL, breaks = seq(0, 100, 10), labels = paste0(seq(0, 100, 10), \"%\"),\n                                   lim = c(0, 100)) +\n                scale_y_continuous(name = NULL, labels = NULL) +\n                scale_fill_manual(name = \"\", values = c(\"red\", \"blue\")) +\n                ggtitle(\"Probability of achieving service class\") +\n                coord_cartesian(expand = FALSE) +\n                artyfarty::theme_scientific() +\n                theme(legend.position = c(0.95, 0.95))\n            \n            graph_m <-\n                filtered() %>%\n                ggparcoord(columns = c(6, 2),\n                           groupColumn = 4,\n                           alphaLines = 0.2,\n                           scale = \"globalminmax\")\n            \n            labels <- c(\"Bottom cognitive \\n Top non cognitive\",\n                        \"Top cognitive \\n Bottom non cognitive\",\n                        \"Bottom cognitive \\n Top non cognitive\",\n                        \"Top cognitive \\n Bottom non cognitive\")\n            \n            cogn_pred <-\n                graph_m +\n                scale_x_discrete(name = NULL, labels = NULL) +\n                scale_y_continuous(name = NULL,\n                                   limits = c(0, 100),\n                                   breaks = c(10, 30, 70, 90),\n                                   labels = labels) +\n                scale_colour_manual(guide = F, values = c(\"red\", \"blue\")) +\n                theme(panel.background = element_rect(fill = \"white\"),\n                      axis.ticks = element_blank(),\n                      axis.line.x = element_line(colour = \"black\")) +\n                coord_flip(expand = FALSE) +\n                artyfarty::theme_scientific() +\n                theme(axis.text.x = element_text(size = 13))\n            \n            grid.arrange(dist_pred, cogn_pred, ncol=1, nrow=2, widths = 10, heights = c(2, 4))\n        })\n        \n        output$graph <- renderPlot({\n            ineq_graph()\n        })\n    })\n\nui <- bootstrapPage(\n    selectInput('country', 'Choose country:', unique(all_data$country)),\n    plotOutput('graph', width = 950, height = 700)\n)\n\n\nshinyApp(ui = ui, server = server)",
    "created" : 1496910117550.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "9|50|76|4|\n",
    "hash" : "1099470458",
    "id" : "4C09A1BF",
    "lastKnownWriteTime" : 1496911734,
    "last_content_update" : 1496911734256,
    "path" : "~/Downloads/gitrepo/social_mobility_shinyapp/interactive_shiny.R",
    "project_path" : "interactive_shiny.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}